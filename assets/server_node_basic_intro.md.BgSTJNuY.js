import{_ as l,c as i,o,ag as a}from"./chunks/framework.XczS8JdJ.js";const d="/knowledge-has-no-limit/assets/f92d894cb969bc85ebd57df9708db012.DERqdE-I.png",_=JSON.parse('{"title":"简介","description":"","frontmatter":{},"headers":[],"relativePath":"server/node/basic/intro.md","filePath":"server/node/basic/intro.md","lastUpdated":1738685171000}'),s={name:"server/node/basic/intro.md"};function c(t,e,r,n,p,u){return o(),i("div",null,e[0]||(e[0]=[a('<h1 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><ol><li><code>Nodejs</code>是一个运行时环境，所使用的语言是<code>JavaScript</code>。</li><li><code>Nodejs</code>使用异步<code>IO</code>和事件循环的设计，提供非阻塞异步处理<code>IO</code>事件，在<code>IO</code>处理上有天然的优势，可以高效处理高并发请求。</li><li><code>Nodejs</code>适合做一些<code>IO</code>密集型应用，反而对<code>CPU</code>计算密集应用不占优势（<code>CPU</code>密集型指图像音频一类需要大量计算的应用），如果非要做，需要借助<code>C++</code>插件或者<code>Nodejs</code>提供的 <code>cluster</code>模块。</li><li>使用<code>npm</code>作为包管理工具</li></ol><h2 id="基本架构" tabindex="-1">基本架构 <a class="header-anchor" href="#基本架构" aria-label="Permalink to &quot;基本架构&quot;">​</a></h2><p><img src="'+d+'" alt="img"></p><h2 id="生态工具链" tabindex="-1">生态工具链 <a class="header-anchor" href="#生态工具链" aria-label="Permalink to &quot;生态工具链&quot;">​</a></h2><p>以下应用场景通常是依赖<code>Nodejs</code>运行环境或者依赖<code>Nodejs</code>运行的。</p><ol><li><p>基建</p><ul><li>vite</li><li>webpack</li><li>rollup</li><li>less</li><li>sass/scss</li><li>postCss</li><li>command</li></ul></li><li><p>前端</p><ul><li>vue</li><li>react</li><li>react native</li><li>angular</li><li>nuxtjs</li><li>nextjs</li><li>electron</li><li>tauri</li></ul></li><li><p>后端</p><ul><li>nestjs</li><li>express</li><li>koa</li><li>egg</li><li>fastjs</li><li>serverless</li></ul></li><li><p>嵌入式</p><ul><li>ruffjs</li><li>...</li></ul></li></ol>',8)]))}const m=l(s,[["render",c]]);export{_ as __pageData,m as default};
